import OpenAI from 'openai';
import { storageService, type GameData, type MiniReport } from './storageService';

const openai = new OpenAI({
  apiKey: import.meta.env.VITE_OPENAI_API_KEY,
  dangerouslyAllowBrowser: true
});

export class MiniReportService {
  static async generateAndSaveMiniReport(gameData: GameData): Promise<string> {
    try {
      console.log('๐ฎ ุจุฏุก ุชุญููู ุงููุนุจุฉ:', gameData.gameType);

      const prompt = `ุฃูุช ุฎุจูุฑ ููุณู ูุชุฎุตุต ูู ุชูููู ุงูุฃุทูุงู.

ูู ุจุชุญููู ุฃุฏุงุก ุงูุทูู ูู ูุนุจุฉ ${gameData.gameType}:

๐ ุงูุจูุงูุงุช:
- ุงููุชูุฌุฉ: ${gameData.score}/100
- ุงูููุช: ${gameData.duration} ุซุงููุฉ
- ุนุฏุฏ ุงูููุฑุงุช: ${gameData.clicks}
- ุงูุฅุฌุงุจุงุช ุงูุตุญูุญุฉ: ${gameData.correctAnswers}
- ุงูุฅุฌุงุจุงุช ุงูุฎุงุทุฆุฉ: ${gameData.wrongAnswers}
- ุฅุฌูุงูู ุงููุญุงููุงุช: ${gameData.totalAttempts}
- ูุณุจุฉ ุงููุฌุงุญ: ${((gameData.correctAnswers / gameData.totalAttempts) * 100).toFixed(1)}%

ุงูุชุจ ุชุญููู ุดุงูู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูุชุถูู:

1๏ธโฃ ุชูููู ุงูุฃุฏุงุก ุงูุนุงู (2-3 ุฌูู)
2๏ธโฃ ููุงุท ุงูููุฉ ุงูููุญูุธุฉ (2-3 ููุงุท)
3๏ธโฃ ุงููุฌุงูุงุช ุงูุชู ุชุญุชุงุฌ ุชุทููุฑ (1-2 ููุทุฉ)
4๏ธโฃ ูุตุงุฆุญ ุนูููุฉ ููุชุญุณูู (2-3 ูุตุงุฆุญ)
5๏ธโฃ ุชูููู ุงูุณููู (ูุซู: ุณุฑุนุฉ ุงูุงุณุชุฌุงุจุฉุ ุงูุฏูุฉุ ุงูุตุจุฑ)

ุงุณุชุฎุฏู ุฃุณููุจ ุชุดุฌูุนู ูุฅูุฌุงุจู.`;

      const completion = await openai.chat.completions.create({
        model: 'gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: 'ุฃูุช ุฎุจูุฑ ููุณู ูุชุฎุตุต ูู ุชูููู ุงูุฃุทูุงู. ูุฏู ุชุญูููุงุช ุฏูููุฉ ููุดุฌุนุฉ ุจุงููุบุฉ ุงูุนุฑุจูุฉ.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 800
      });

      const analysis = completion.choices[0]?.message?.content || 'ูู ูุชู ุฅูุดุงุก ุงูุชุญููู';

      console.log('โ ุชู ุฅูุดุงุก ุงูุชุญููู ูู GPT');
      console.log('๐ ุงูุชุญููู:', analysis.substring(0, 100) + '...');

      const miniReport: MiniReport = {
        id: `mini_${Date.now()}`,
        gameId: gameData.id,
        gameType: gameData.gameType,
        analysis: analysis,
        score: gameData.score,
        timestamp: new Date().toISOString()
      };

      storageService.saveMiniReport(miniReport);
      console.log('๐พ ุชู ุญูุธ ุงูุชูุฑูุฑ ุงููุตุบุฑ');

      return analysis;

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุชูููุฏ ุงูุชูุฑูุฑ ุงููุตุบุฑ:', error);
      throw error;
    }
  }

  static getAllMiniReports(): MiniReport[] {
    return storageService.getAllMiniReports();
  }

  static getRecentMiniReports(count: number): MiniReport[] {
    return storageService.getRecentMiniReports(count);
  }
}
